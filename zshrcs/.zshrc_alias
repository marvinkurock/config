alias gfb="git branch --remote | fzf | sed 's/origin\///g' | xargs git switch -c"
alias gamemode="./.config/config-scripts/gamemode.sh"

tm ()
{
  name=${1:-î½²}
  tmux new-session -A -s $name 
}

update()
{
  git add .;
  if [[ $1 ]]
  then
    echo $1;
    git commit -m "$1"
  else
    echo "update";
    git commit -m "update"
  fi
}
updatep()
{
  update "$1"
  git push;
}
del_local_branches()
{
  branches=$(git branch | grep -xv "\(* \)\?main\|master")
  echo "Want to delete all these branches?"
  echo $branches
  input="n"
  echo -n "[N y]"
  read -r input
  if [[ "$input" == "y" || "$input" == "Y" ]]; then
    echo deleting
    echo $branches | xargs git branch -D
  fi
}

gnb()
{
  if [[ -z "$1" ]]; then
    echo "you need to provide a branch name"
    return 0
  fi
  git fetch origin
  gcm
  gco -b "$1"
}

alias k=kubectl
alias kcc="k config get-contexts"
alias kgp="k get pods"
alias kdp="k describe pod"
alias kd="k describe"
alias kgns="k get ns"
alias kgs="k get services"
alias kds="k describe service"
alias kgde="k get deployment"
alias kdde="k describe deployment"
alias kgi="k get ingress"
alias kdi="k describe ingress"
alias kgir="k get ingressroute"
alias kdir="k describe ingressroute"
alias kl="k logs"
alias klf="k logs --follow=true"
alias kx="k exec -it"
ksn()
{
    kubectl config set-context --current --namespace="$1"
}
alias kcns="kubectl config view --minify | grep namespace:"
alias kdn="kubectl describe node"
alias kgn="kubectl get nodes"
alias ktn="kubectl top nodes"
alias ktp="kubectl top pods"
alias kuc="k config use-context"

alias ll="ls -l"
alias la="ls -la"
alias lg="lazygit"

alias internetip="curl ipecho.net/plain ; echo"
